<Window x:Class="PastryShop.View.ManagerAddProductDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PastryShop.Converter"
        WindowStyle="None"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded"
        Width="900" Height="700">

    <Window.Resources>
        <local:TypeToVisibilityConverter x:Key="TypeToVisibilityConverter"/>
        <local:FilterOptionToImagePathConverter x:Key="FilterOptionToImagePathConverter"/>
        <local:ImagePathToImageConverter x:Key="ImagePathToImageConverter"/>
        <local:EnumToResourceKeyConverter x:Key="EnumToResourceKeyConverter"/>

        <DataTemplate x:Key="EmptyTemplate">
            <Grid/>
        </DataTemplate>
        <DataTemplate x:Key="FoodTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" 
                    Text="{DynamicResource ProductManagementAddFoodTypeString}" 
                    Style="{DynamicResource ProductManagementAddRightTextBlockStyle}"/>
                <ComboBox Grid.Row="0" Grid.Column="1" 
                    ItemsSource="{Binding DataContext.FoodTypes, RelativeSource={RelativeSource AncestorType=Window}}"       
                    SelectedItem="{Binding SelectedFoodType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"    
                    Style="{DynamicResource ProductManagementAddFoodTypeComboBoxStyle}"
                    ItemContainerStyle="{DynamicResource ProductManagementAddFoodTypeComboBoxItemStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumToResourceKeyConverter}, ConverterParameter=ProductManagement}" Style="{DynamicResource ProductManagementAddFoodTypeComboBoxItemTextBlockStyle}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource ProductManagementAddWeightString}" Style="{DynamicResource ProductManagementAddRightTextBlockStyle}"/>
                <TextBox Grid.Row="1" Grid.Column="1"
                    Text="{Binding DataContext.WeightText, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    Style="{DynamicResource ProductManagementAddTextBoxStyle}"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource ProductManagementAddCaloriesString}" Style="{DynamicResource ProductManagementAddRightTextBlockStyle}"/>
                <TextBox Grid.Row="2" Grid.Column="1"
                    Text="{Binding DataContext.CaloriesText, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    Style="{DynamicResource ProductManagementAddTextBoxStyle}"/>

                <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource ProductManagementAddIsPerishableString}" Style="{DynamicResource ProductManagementAddRightTextBlockStyle}"/>
                    <CheckBox IsChecked="{Binding FoodProductDTO.IsPerishable, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource ProductManagementAddCheckBoxStyle}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DrinkTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource ProductManagementAddVolumeString}" Style="{DynamicResource ProductManagementAddRightTextBlockStyle}"/>
                <TextBox Grid.Row="0" Grid.Column="1"
                    Text="{Binding DataContext.VolumeText, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    Style="{DynamicResource ProductManagementAddTextBoxStyle}"/>

                <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource ProductManagementAddIsAlcoholicString}" Style="{DynamicResource ProductManagementAddRightTextBlockStyle}"/>
                    <CheckBox IsChecked="{Binding DrinkProductDTO.IsAlcoholic, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource ProductManagementAddCheckBoxStyle}"/>
                </StackPanel>

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="AccessoryTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource ProductManagementAddMaterialString}" Style="{DynamicResource ProductManagementAddRightTextBlockStyle}"/>
                <TextBox Grid.Row="0" Grid.Column="1"
                    Text="{Binding DataContext.MaterialText, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    Style="{DynamicResource ProductManagementAddTextBoxStyle}"/>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource ProductManagementAddDimensionsString}" Style="{DynamicResource ProductManagementAddRightTextBlockStyle}"/>
                <TextBox Grid.Row="1" Grid.Column="1"
                    Text="{Binding DataContext.DimensionsText, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"             
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    Style="{DynamicResource ProductManagementAddTextBoxStyle}"/>

                <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                    <TextBlock Text="{DynamicResource ProductManagementAddIsReusableString}" Style="{DynamicResource ProductManagementAddRightTextBlockStyle}"/>
                    <CheckBox IsChecked="{Binding AccessoryProductDTO.IsReusable, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource ProductManagementAddCheckBoxStyle}"/>
                </StackPanel>

            </Grid>
        </DataTemplate>
    </Window.Resources>

    <Grid Style="{DynamicResource ProductManagementAddContainerGridStyle}">

        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="6*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" 
            Text="{DynamicResource ProductManagementAddTitleString}" 
            Style="{DynamicResource ProductManagementAddTitleTextBlockStyle}"/>

        <Border Grid.Row="1"
            Style="{DynamicResource ProductManagementAddContentBorderStyle}">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" 
                    Style="{DynamicResource ProductManagementAddContainerUserTypeStackPanelStyle}">

                    <TextBlock Text="{DynamicResource ProductManagementAddProductTypeString}" 
                        Style="{DynamicResource ProductManagementAddUserTypeTextBlockStyle}"/>

                    <ComboBox 
                        ItemsSource="{Binding ProductTypes}"
                        SelectedItem="{Binding SelectedProductType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                        Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                        Style="{DynamicResource ProductManagementAddComboBoxStyle}"
                        ItemContainerStyle="{DynamicResource ProductManagementAddComboBoxItemStyle}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource EnumToResourceKeyConverter}, ConverterParameter=ProductManagement}" Style="{DynamicResource ProductManagementAddComboBoxItemTextBlockStyle}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <TextBlock Grid.Row="1" Grid.Column="0"
                    Text="{DynamicResource ProductManagementAddNameString}" 
                    Style="{DynamicResource ProductManagementAddLeftTextBlockStyle}"/>
                <TextBox Grid.Row="1" Grid.Column="1" 
                    Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    Style="{DynamicResource ProductManagementAddTextBoxStyle}"/>

                <TextBlock Grid.Row="2" Grid.Column="0" Grid.RowSpan="2"
                    Text="{DynamicResource ProductManagementAddDescriptionString}" 
                    Style="{DynamicResource ProductManagementAddLeftTextBlockStyle}"/>
                <TextBox Grid.Row="2" Grid.Column="1" Grid.RowSpan="2"
                    Text="{Binding Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    Style="{DynamicResource ProductManagementAddDescriptionTextBoxStyle}"/>

                <TextBlock Grid.Row="4" Grid.Column="0"
                    Text="{DynamicResource ProductManagementAddPriceString}" 
                    Style="{DynamicResource ProductManagementAddLeftTextBlockStyle}"/>
                <TextBox Grid.Row="4" Grid.Column="1" 
                    Text="{Binding PriceText, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                    Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                    Style="{DynamicResource ProductManagementAddTextBoxStyle}"/>

                <TextBlock Grid.Row="5" Grid.Column="0"
                    Text="{DynamicResource ProductManagementAddImagePathString}" 
                    Style="{DynamicResource ProductManagementAddLeftTextBlockStyle}"/>
                <Button Grid.Row="5" Grid.Column="1"
                    Content="{DynamicResource ProductManagementAddSelectImageString}" 
                    Command="{Binding BrowseImageCommand}" 
                    Style="{DynamicResource ProductManagementAddImageButtonStyle}"/>
                <Image Grid.Row="6" Grid.Column="1"
                    Source="{Binding SelectedImagePath, Converter={StaticResource ImagePathToImageConverter}, ConverterParameter=Products}"
                    Style="{DynamicResource ProductManagementAddImageStyle}"/>

                <ContentControl Grid.Row="1" Grid.Column="2" Grid.RowSpan="4" Grid.ColumnSpan="2" 
                    Content="{Binding}" Validation.ErrorTemplate="{x:Null}">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="ContentTemplate" Value="{StaticResource EmptyTemplate}"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedProductType}" Value="Food">
                                    <Setter Property="ContentTemplate" Value="{StaticResource FoodTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedProductType}" Value="Drink">
                                    <Setter Property="ContentTemplate" Value="{StaticResource DrinkTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedProductType}" Value="Accessory">
                                    <Setter Property="ContentTemplate" Value="{StaticResource AccessoryTemplate}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

            </Grid>

        </Border>

        <StackPanel Grid.Row="2" Style="{DynamicResource ProductManagementAddContainerButtonStackPanelStyle}">
            <Button Content="{DynamicResource ProductManagementAddSaveButtonString}" Command="{Binding AddCommand}" IsDefault="True" Style="{DynamicResource ProductManagementAddSaveButtonStyle}"/>
            <Button Content="{DynamicResource ProductManagementAddCancelButtonString}" IsCancel="True" Style="{DynamicResource ProductManagementAddCancelButtonStyle}"/>
        </StackPanel>

    </Grid>

</Window>